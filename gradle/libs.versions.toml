[versions]
agp = "8.1.3"
annotation = "1.7.1"
kotlin = "1.9.22"
kotlin-serialization-json = "1.6.3"
coreKtx = "1.12.0"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
androidx-lifecycle = "2.7.0"
activityCompose = "1.8.2"
composeBom = "2024.02.01"
androidx-compose-runtime = "1.6.2"
androidx-compose-kotlin-compiler-ext = "1.5.10"
retrofit = "2.9.0"
kotlinx-coroutines = "1.8.0"
retrofitAdaptersResult = "1.0.9"
retrofitConverterKotlinxSerialization = "1.0.0"
appcompat = "1.6.1"
material = "1.11.0"
room = "2.6.1"
ksp = "1.9.22-1.0.17"
dagger = "2.50"
hiltTesting = "2.44"
javax-inject = "1"
okhttp ="4.12.0"
androidxNavigation = "2.7.7"
androidxHiltNavigationCompose = "1.0.0"
coil = "2.2.2"
truthVersion = "1.1.3"
mockkVersion = "1.10.0"
mockWebServerVersion = "4.9.3"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

junit = { group = "junit", name = "junit", version.ref = "junit" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }

androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }

androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version = "1.4.1" }
androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime", version.ref = "androidx-compose-runtime" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidxNavigation" }

androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { group = "com.squareup.retrofit2", name = "converter-moshi", version.ref = "retrofit" }
retrofit-adapters-result = { module = "com.github.skydoves:retrofit-adapters-result", version.ref = "retrofitAdaptersResult" }
retrofit-converter-kotlinx-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofitConverterKotlinxSerialization" }

koltinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
koltinx-coroutines-android  = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

koltinx-serialization-json  = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-json" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-main = { module = "com.google.dagger:dagger", version.ref = "dagger" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "androidxHiltNavigationCompose" }
androidx-hilt-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hiltTesting" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }

coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }

androidx-runner = { group = "androidx.test", name = "runner", version = "1.5.2" }

truth = { group = "com.google.truth", name = "truth", version.ref = "truthVersion" }

mockk = { group = "io.mockk", name = "mockk", version.ref = "mockkVersion" }
mockk-android = { group = "io.mockk", name = "mockk-android", version.ref = "mockkVersion" }

mockWebServer = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "mockWebServerVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
jetbrainsKotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
androidx-room = { id = "androidx.room", version.ref = "room" }

